%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 49 19 191 168 
%%LanguageLevel: 3
%%Creator: CorelDRAW 12
%%Title: bdd6.eps
%%CreationDate: Fri May 09 17:35:19 2014
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/UseLevel 3 def
%Build: CorelDRAW Version 12.154
%Color profile: Vypnuto
/CorelIsEPS true def
%%BeginResource: procset wCorel12Dict 12.0 0
/wCorel12Dict 300 dict def wCorel12Dict begin
% Copyright (c)1992-2003 Corel Corporation
% All rights reserved.     v12 r0.0
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CorelIsSeps where{pop}{/CorelIsSeps false def}ifelse
/CorelIsInRIPSeps where{pop}{/CorelIsInRIPSeps false def}ifelse/CorelIsEPS
where{pop}{/CorelIsEPS false def}ifelse/CurrentInkName_5 where{pop}
{/CurrentInkName_5(Composite)def}ifelse/$ink_5 where{pop}{/$ink_5 -1 def}
ifelse/$c 0 def/$m 0 def/$y 0 def/$k 0 def/$t 1 def/$n _ def/$o 0 def/$fil 0
def/$C 0 def/$M 0 def/$Y 0 def/$K 0 def/$T 1 def/$N _ def/$O 0 def/$PF false
def/s1c 0 def/s1m 0 def/s1y 0 def/s1k 0 def/s1t 0 def/s1n _ def/$bkg false def
/SK 0 def/SM 0 def/SY 0 def/SC 0 def/$op false def matrix currentmatrix/$ctm xd
/$ptm matrix def/$ttm matrix def/$stm matrix def/$ffpnt true def
/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent 16#8/ring
16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle
16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/L2?/languagelevel where{pop languagelevel 2 ge}{false}ifelse def/Comp?{
/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{1 0 0 0 @gs
setcmykcolor currentcmykcolor @gr add add add 0 ne 0 1 0 0 @gs setcmykcolor
currentcmykcolor @gr add add add 0 ne 0 0 1 0 @gs setcmykcolor currentcmykcolor
@gr add add add 0 ne 0 0 0 1 @gs setcmykcolor currentcmykcolor @gr add add add
0 ne and and and}ifelse}ifelse}bd/@PL{/LV where{pop LV 2 ge L2? not and{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if L2?{/@ssa{true setstrokeadjust}bd}{
/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M/setmiterlimit
ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l
/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}
bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1
exch sub/$k xd/$c 0 def/$m 0 def/$y 0 def/$t 1 def/$n _ def/$fil 0 def}bd/G{1
sub neg/$K xd _ 1 0 0 0/$C xd/$M xd/$Y xd/$T xd/$N xd}bd/k{1 index type
/stringtype eq{/$t xd/$n xd}{/$t 0 def/$n _ def}ifelse/$k xd/$y xd/$m xd/$c xd
/$fil 0 def}bd/K{1 index type/stringtype eq{/$T xd/$N xd}{/$T 0 def/$N _ def}
ifelse/$K xd/$Y xd/$M xd/$C xd}bd/x/k ld/X/K ld/sf{1 index type/stringtype eq{
/s1t xd/s1n xd}{/s1t 0 def/s1n _ def}ifelse/s1k xd/s1y xd/s1m xd/s1c xd}bd/i{
dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2
copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix
/$ptm xd 1 eq{$ptm exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd
{/$scp xd/$sca xd/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}
if}bd/@D{2 index 0 eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch
load SetScr/$dsp xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}
{$dsa}ifelse $SCP @ss}if}bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge
{pop}{exch pop}ifelse}bd/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch
rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll
eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1
exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}
repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1
roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index
.114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{/SetRgb
/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray
ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor
get def/SetHsb systemdict/sethsbcolor get def/GetHsb systemdict
/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor
sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict where{pop
/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where{pop
/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5/setcmykcolor ld
}ifelse}ifelse}{/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{
pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse
/setoverprint where{pop}{/setoverprint{/$op xd}bd}ifelse/currentoverprint where
{pop}{/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1
roll mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1 roll @tc_5}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{0 4 $ink_5 sub index exch pop 5 1
roll pop pop pop pop SepsColor true eq{$ink_5 3 gt{1 sub neg SetGry}{0 0 0 4
$ink_5 roll SetCmyk_5}ifelse}{1 sub neg SetGry}ifelse}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}bd}ifelse
/Corelsetcustomcolor_exists false def/setcustomcolor where{pop
/Corelsetcustomcolor_exists true def}if CorelIsSeps true eq CorelIsInRIPSeps
false eq and{/Corelsetcustomcolor_exists false def}if
Corelsetcustomcolor_exists false eq{/setcustomcolor{exch aload pop SepMode_5 0
eq{pop @tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll
5 rp 1 sub neg SetGry}ifelse}bd}if/@scc_5{dup type/booleantype eq{dup
currentoverprint ne{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse dup _ eq
{pop setprocesscolor_5 pop}{findcmykcustomcolor exch setcustomcolor}ifelse
SepMode_5 0 eq{true}{GetGry 1 eq currentoverprint and not}ifelse}bd/colorimage
where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd/$multi xd $multi
true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch pop abs{daqR pop
daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop pop exch pop abs
{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd{dataaq ncolors
dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1 index get 255
div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div rgb2g 255 mul
cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv getinterval pop}{
4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1 index get 255 div
$dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div $dat 4 index 3
add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat
0 $dat length ncolors idiv getinterval}if}ifelse}image}ifelse}bd}ifelse
/setcmykcolor{1 5 1 roll _ currentoverprint @scc_5/$ffpnt xd}bd
/currentcmykcolor{GetCmyk}bd/setrgbcolor{rgb2cmyk setcmykcolor}bd
/currentrgbcolor{currentcmykcolor cmyk2rgb}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def/$fm 0 def
/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d $t $c $m $y $k $n $o @scc_5 pop $ctm setmatrix 72
1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{CorelPtrnDoFill}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{$fil 4 eq
{CorelShfillDoFill}{$t $c $m $y $k $n $o @scc_5{wfill}{@np}ifelse}ifelse}
ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{
matrix currentmatrix $ctm setmatrix $SDF{$SCF $SCA $SCP @ss}if $T $C $M $Y $K
$N $O @scc_5{matrix currentmatrix $ptm concat stroke setmatrix}{@np}ifelse $SDF
{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{
5 array astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{
/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{
@cp}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{
@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq{/$ink_5 -1 def}
{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5(Magenta)eq{/$ink_5 1
def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{CurrentInkName_5(Black)eq
{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}ifelse}ifelse}bd/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
% Copyright (c)1992-2003 Corel Corporation
% All rights reserved.     v12 r0.0
/z{exch findfont exch scalefont setfont}bd/ZB{9 dict dup begin 4 1 roll
/FontType 3 def/FontMatrix xd/FontBBox xd/Encoding 256 array def 0 1 255{
Encoding exch/.notdef put}for/CharStrings 256 dict def CharStrings/.notdef{}
put/Metrics 256 dict def Metrics/.notdef 3 -1 roll put/BuildChar{exch dup
/$char exch/Encoding get 3 index get def dup/Metrics get $char get aload pop
setcachedevice begin Encoding exch get CharStrings exch get end exec}def end
definefont pop}bd/ZBAddChar{findfont begin dup 4 1 roll dup 6 1 roll Encoding 3
1 roll put CharStrings 3 1 roll put Metrics 3 1 roll put end}bd/Z{findfont dup
maxlength 2 add dict exch dup{1 index/FID ne{3 index 3 1 roll put}{pop pop}
ifelse}forall pop dup dup/Encoding get 256 array copy dup/$fe xd/Encoding exch
put dup/Fontname 3 index put 3 -1 roll dup length 0 ne{0 exch{dup type 0 type
eq{exch pop}{$fe exch 2 index exch put 1 add}ifelse}forall pop}if dup 256 dict
dup/$met xd/Metrics exch put dup/FontMatrix get 0 get 1000 mul 1 exch div 3
index length 256 eq{0 1 255{dup $fe exch get dup/.notdef eq{pop pop}{5 index 3
-1 roll get 2 index mul $met 3 1 roll put}ifelse}for}if pop definefont pop pop
}bd/CorelIsValidCharpath{pathbbox 3 -1 roll sub abs 0.5 ge 3 1 roll sub abs 0.5
ge and}bd/@ftx{{currentpoint 3 -1 roll(0)dup 3 -1 roll 0 exch put dup @gs true
charpath $ctm setmatrix CorelIsValidCharpath{@@txt}if @gr @np stringwidth pop 3
-1 roll add exch m}forall}bd/@ft{matrix currentmatrix exch $sdf{$scf $sca $scp
@ss}if $fil 1 eq{/@@txt/@pf ld @ftx}{$fil 2 eq{/@@txt/@ff ld @ftx}{$fil 3 eq
{/@@txt/@Pf ld @ftx}{$fil 4 eq{/@@txt/CorelShfillDoFill ld @ftx}{$t $c $m $y $k
$n $o @scc_5{show}{pop}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp
@ss}if setmatrix}bd/@st{matrix currentmatrix exch $SDF{$SCF $SCA $SCP @ss}if $T
$C $M $Y $K $N $O @scc_5{{currentpoint 3 -1 roll(0)dup 3 -1 roll 0 exch put dup
@gs true charpath $ctm setmatrix $ptm concat stroke @gr @np stringwidth pop 3
-1 roll add exch m}forall}{pop}ifelse $SDF{$dsf $dsa $dsp @ss}if setmatrix}bd
/@te{@ft}bd/@tr{@st}bd/@ta{dup @gs @ft @gr @st}bd/@t@a{dup @gs @st @gr @ft}bd
/@tm{@sm concat}bd/e{/t{@te}def}bd/r{/t{@tr}def}bd/o{/t{pop}def}bd/a{/t{@ta}
def}bd/@a{/t{@t@a}def}bd/t{@te}def/T{@np $ctm setmatrix/$ttm matrix def}bd/ddt
{t}def/@t{/$stm $stm currentmatrix def 3 1 roll m $ttm concat ddt $stm
setmatrix}bd/@n{/$ttm exch matrix rotate def}bd/@s{}bd/@l{}bd/_lineorientation
0 def/_bitfont null def/_bitlobyte 0 def/_bitkey null def/_bithibyte 0 def
% Copyright (c)1992-2003 Corel Corporation
% All rights reserved.     v12 r0.0
/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/@i{@sm @gs @ii 6 index 1 ne{/$frg true
def pop pop}{1 eq{s1t s1c s1m s1y s1k s1n $O @scc_5/$frg xd}{/$frg false def}
ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd/$lly xd
/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi string
def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub $ury
$lly sub scale $bkg{$t $c $m $y $k $n $o @scc_5 pop}if $wid $hei abs $bts 1 eq
{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts
1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]$msimage false eq $ncl 1 eq or{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi
string def/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi $ncl
3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string def
/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def L2?{/@I_2{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd/$llx
xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div ceiling
cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}{/DeviceCMYK}
ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly sub scale 8
dict begin/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent
$bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}
ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def
/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP
2 eq{/RunLengthDecode filter}if}ifelse def currentdict end image $SDF{$dsf $dsa
$dsp @ss}if @gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury
xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul
$ncl mul 8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub
$ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin/ImageType 1
def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def/Decode $ncl 1
eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}ifelse}ifelse def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource
currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP 2 eq{
/RunLengthDecode filter}if}ifelse def end/MaskedImageDict 7 dict def
MaskedImageDict begin/ImageType 3 def/InterleaveType 3 def/MaskDict
ImageMaskDict def/DataDict ImageDataDict def end MaskedImageDict image $SDF
{$dsf $dsa $dsp @ss}if @gr $ctm setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid
xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def/Width $mwid def
/Height $mhei abs def/BitsPerComponent $mbts def/DataSource maskstream def
/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]
def end}bd/@daq{dup type/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq
MaskedImage true eq and{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq
UseLevel 3 eq or and{7 -2 roll pop pop @I_2}{11 index 1 eq{12 -1 roll pop @i}{
7 -2 roll pop pop @I}ifelse}ifelse}ifelse}bd
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel12Dict begin
@BeginSysCorelDict
@ssa
2.6131 setmiterlimit
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
109.15002 149.94709 126.35802 167.15509 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.43087 0.43087 0.00000 @w
/$fm 0 def
117.71802 167.15509 m
122.47002 167.15509 126.35802 163.26709 126.35802 158.58709 C
126.35802 153.83509 122.47002 149.94709 117.71802 149.94709 C
113.03802 149.94709 109.15002 153.83509 109.15002 158.58709 C
109.15002 163.26709 113.03802 167.15509 117.71802 167.15509 C
@c
S

@rax %Note: Object
137.49647 93.25417 154.70447 110.46217 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
[1.00000000 0.00000000 0.00000000 1.00000000 0.00000000 0.00000000] 1 0.43087 0.43087 0.00000 @w
/$fm 0 def
146.06447 110.46217 m
150.81647 110.46217 154.70447 106.57417 154.70447 101.89417 C
154.70447 97.14217 150.81647 93.25417 146.06447 93.25417 C
141.38447 93.25417 137.49647 97.14217 137.49647 101.89417 C
137.49647 106.57417 141.38447 110.46217 146.06447 110.46217 C
@c
S

@rax %Note: Object
109.15795 36.56920 126.35036 53.76161 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 0.21600 0.21600 0.00000 @w
/$fm 0 def
109.15795 53.76161 m
126.35036 53.76161 L
126.35036 36.56920 L
109.15795 36.56920 L
109.15795 53.76161 L
@c
S

@rax %Note: Object
52.46504 36.56920 69.65745 53.76161 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 0.21600 0.21600 0.00000 @w
/$fm 0 def
52.46504 53.76161 m
69.65745 53.76161 L
69.65745 36.56920 L
52.46504 36.56920 L
52.46504 53.76161 L
@c
S

@rax %Note: Object
165.85115 36.56920 183.04356 53.76161 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 0.21600 0.21600 0.00000 @w
/$fm 0 def
165.85115 53.76161 m
183.04356 53.76161 L
183.04356 36.56920 L
165.85115 36.56920 L
165.85115 53.76161 L
@c
S

@rax %Note: Object
61.06110 53.76161 112.97991 151.10901 @E
0 J 0 j [1 5 ] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 0.21600 0.21600 0.00000 @w
/$fm 0 def
112.97991 151.10901 m
62.72986 56.89049 L
S
@j
0.00 0.00 0.00 1.00 K
0.00 0.00 0.00 1.00 k
0 @g
0 @G
[] 0 d 0 J 0 j
0 R 0 O
0 1.00800 1.00800 0 @w
61.06110 53.76161 m
63.57061 55.79773 L
62.63150 55.81644 61.89279 56.21046 61.35392 56.97978 C
61.06110 53.76161 L
f
@J

@rax %Note: Object
117.75402 53.76161 141.53244 94.46683 @E
0 J 0 j [1 5 ] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 0.21600 0.21600 0.00000 @w
/$fm 0 def
141.53244 94.46683 m
119.54268 56.82331 L
S
@j
0.00 0.00 0.00 1.00 K
0.00 0.00 0.00 1.00 k
0 @g
0 @G
[] 0 d 0 J 0 j
0 R 0 O
0 1.00800 1.00800 0 @w
117.75402 53.76161 m
120.34063 55.69909 L
119.40293 55.75408 118.67981 56.17644 118.17128 56.96617 C
117.75402 53.76161 L
f
@J

@rax %Note: Object
122.35833 107.93310 140.02554 150.94913 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 0.21600 0.21600 0.00000 @w
/$fm 0 def
122.35833 150.94913 m
138.67852 111.21335 L
S
@j
0.00 0.00 0.00 1.00 K
0.00 0.00 0.00 1.00 k
0 @g
0 @G
[] 0 d 0 J 0 j
0 R 0 O
0 1.00800 1.00800 0 @w
140.02554 107.93310 m
140.05616 111.16460 L
139.44331 110.45282 138.66860 110.13477 137.73231 110.21017 C
140.02554 107.93310 L
f
@J

@rax %Note: Object
150.75411 53.76161 174.44721 94.54535 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 0.21600 0.21600 0.00000 @w
/$fm 0 def
150.75411 94.54535 m
172.66592 56.82784 L
S
@j
0.00 0.00 0.00 1.00 K
0.00 0.00 0.00 1.00 k
0 @g
0 @G
[] 0 d 0 J 0 j
0 R 0 O
0 1.00800 1.00800 0 @w
174.44721 53.76161 m
174.03761 56.96702 L
173.52737 56.17871 172.80312 55.75805 171.86542 55.70504 C
174.44721 53.76161 L
f
@J

@rax 49.26501 19.91055 190.17581 30.30718 @E
[0.00028346 0.00000000 0.00000000 0.00028346 43.70853383 23.02724325] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_ArialMT 35277.00000 z
%CHAR: 19602 0 (S) @t
/$fm 1 def
21189 8114 m
24341 8390 L
24488 7126 24835 6091 25382 5280 c
25928 4468 26775 3816 27921 3316 c
29068 2816 30361 2569 31796 2569 c
33072 2569 34195 2757 35171 3134 c
36147 3516 36876 4033 37352 4692 c
37828 5356 38070 6074 38070 6855 c
38070 7649 37840 8337 37376 8931 c
36917 9525 36159 10019 35106 10418 c
34424 10683 32931 11095 30608 11653 c
28292 12212 26663 12735 25734 13229 c
24529 13858 23629 14646 23036 15581 c
22448 16516 22154 17562 22154 18726 c
22154 19996 22512 21190 23236 22295 c
23959 23406 25017 24247 26405 24823 c
27798 25394 29338 25682 31038 25682 c
32913 25682 34559 25382 35994 24776 c
37423 24177 38522 23289 39292 22119 c
40057 20949 40474 19620 40533 18138 C
37329 17897 L
37152 19491 36570 20702 35577 21513 c
34583 22330 33119 22736 31179 22736 c
29156 22736 27686 22366 26757 21625 c
25834 20884 25370 19990 25370 18950 c
25370 18038 25699 17292 26352 16710 c
26998 16122 28674 15522 31390 14910 c
34107 14293 35971 13758 36982 13299 c
38452 12617 39539 11759 40239 10724 c
40939 9684 41286 8484 41286 7132 c
41286 5785 40903 4521 40133 3334 c
39363 2146 38258 1223 36817 559 c
35377 -100 33754 -429 31955 -429 c
29668 -429 27751 -100 26211 570 c
24664 1235 23453 2234 22571 3575 c
21695 4909 21231 6426 21189 8114 C
@c
F
%CHAR: 43132 -10583 (o) @t
/$fm 1 def
44302 -1434 m
44302 1952 45243 4463 47130 6091 c
48700 7444 50617 8126 52880 8126 c
55397 8126 57454 7302 59048 5650 c
60647 4004 61441 1729 61441 -1176 c
61441 -3533 61088 -5386 60382 -6732 c
59677 -8084 58648 -9131 57302 -9877 c
55949 -10624 54479 -10995 52880 -10995 c
50323 -10995 48253 -10177 46671 -8531 c
45090 -6891 44302 -4527 44302 -1434 c
@c
47489 -1434 m
47489 -3780 48000 -5533 49023 -6697 c
50046 -7867 51334 -8449 52880 -8449 c
54421 -8449 55702 -7861 56725 -6691 c
57743 -5521 58254 -3733 58254 -1335 c
58254 929 57743 2646 56714 3810 c
55685 4974 54409 5556 52880 5556 c
51334 5556 50046 4974 49023 3816 c
48000 2658 47489 906 47489 -1434 c
@c
F
%CHAR: 62752 -10583 (f) @t
/$fm 1 def
65815 -10583 m
65815 5298 L
63081 5298 L
63081 7708 L
65815 7708 L
65815 9654 l
65815 10883 65927 11800 66144 12394 c
66444 13200 66968 13852 67720 14352 c
68473 14852 69525 15099 70883 15099 c
71754 15099 72718 14999 73776 14787 C
73312 12082 L
72671 12200 72059 12259 71483 12259 c
70542 12259 69878 12059 69490 11653 c
69096 11253 68902 10501 68902 9396 c
68902 7708 L
72465 7708 L
72465 5298 L
68902 5298 L
68902 -10583 L
65815 -10583 L
@c
F
%CHAR: 71918 -10583 (f) @t
/$fm 1 def
74981 -10583 m
74981 5298 L
72247 5298 L
72247 7708 L
74981 7708 L
74981 9654 l
74981 10883 75093 11800 75310 12394 c
75610 13200 76134 13852 76886 14352 c
77639 14852 78691 15099 80049 15099 c
80920 15099 81884 14999 82942 14787 C
82478 12082 L
81837 12200 81225 12259 80649 12259 c
79708 12259 79044 12059 78656 11653 c
78262 11253 78068 10501 78068 9396 c
78068 7708 L
81631 7708 L
81631 5298 L
78068 5298 L
78068 -10583 L
74981 -10583 L
@c
F
%CHAR: 228734 0 (S) @t
/$fm 1 def
230321 8114 m
233473 8390 L
233620 7126 233967 6091 234514 5280 c
235060 4468 235907 3816 237053 3316 c
238200 2816 239493 2569 240928 2569 c
242204 2569 243327 2757 244303 3134 c
245279 3516 246008 4033 246484 4692 c
246960 5356 247202 6074 247202 6855 c
247202 7649 246972 8337 246508 8931 c
246049 9525 245291 10019 244238 10418 c
243556 10683 242063 11095 239740 11653 c
237424 12212 235795 12735 234866 13229 c
233661 13858 232761 14646 232168 15581 c
231580 16516 231286 17562 231286 18726 c
231286 19996 231644 21190 232368 22295 c
233091 23406 234149 24247 235537 24823 c
236930 25394 238470 25682 240170 25682 c
242045 25682 243691 25382 245126 24776 c
246555 24177 247654 23289 248424 22119 c
249189 20949 249606 19620 249665 18138 C
246461 17897 L
246284 19491 245702 20702 244709 21513 c
243715 22330 242251 22736 240311 22736 c
238288 22736 236818 22366 235889 21625 c
234966 20884 234502 19990 234502 18950 c
234502 18038 234831 17292 235484 16710 c
236130 16122 237806 15522 240522 14910 c
243239 14293 245103 13758 246114 13299 c
247584 12617 248671 11759 249371 10724 c
250071 9684 250418 8484 250418 7132 c
250418 5785 250035 4521 249265 3334 c
248495 2146 247390 1223 245949 559 c
244509 -100 242886 -429 241087 -429 c
238800 -429 236883 -100 235343 570 c
233796 1235 232585 2234 231703 3575 c
230827 4909 230363 6426 230321 8114 C
@c
F
%CHAR: 252264 -10583 (s) @t
/$fm 1 def
253352 -5121 m
256415 -4639 L
256585 -5868 257068 -6808 257855 -7467 c
258637 -8119 259737 -8449 261154 -8449 c
262577 -8449 263635 -8155 264323 -7579 c
265011 -6997 265358 -6314 265358 -5538 c
265358 -4833 265052 -4286 264440 -3880 c
264017 -3604 262959 -3257 261271 -2834 c
259002 -2258 257420 -1764 256544 -1340 c
255668 -923 254998 -341 254545 400 c
254093 1141 253863 1958 253863 2852 c
253863 3669 254051 4421 254428 5115 c
254798 5815 255310 6391 255950 6850 c
256433 7202 257091 7508 257920 7755 c
258755 8002 259649 8126 260601 8126 c
262036 8126 263294 7914 264382 7502 c
265469 7091 266269 6532 266786 5827 c
267304 5115 267657 4175 267851 2993 C
264823 2575 L
264682 3516 264282 4251 263623 4780 c
262965 5309 262030 5574 260825 5574 c
259402 5574 258385 5339 257779 4868 c
257168 4398 256862 3845 256862 3216 c
256862 2811 256991 2452 257244 2128 c
257497 1793 257891 1523 258432 1299 c
258743 1188 259655 923 261171 512 c
263364 -76 264893 -553 265757 -929 c
266628 -1299 267310 -1846 267804 -2557 c
268297 -3269 268544 -4151 268544 -5209 c
268544 -6244 268239 -7214 267639 -8131 c
267033 -9043 266163 -9748 265028 -10248 c
263894 -10748 262606 -10995 261171 -10995 c
258790 -10995 256979 -10501 255733 -9513 c
254486 -8525 253693 -7061 253352 -5121 C
@c
F
%CHAR: 269902 -10583 (e) @t
/$fm 1 def
284748 -4692 m
287952 -5086 L
287446 -6961 286512 -8413 285148 -9448 c
283778 -10477 282031 -10995 279909 -10995 c
277234 -10995 275111 -10171 273547 -8525 c
271977 -6879 271195 -4568 271195 -1593 c
271195 1488 271989 3875 273571 5574 c
275158 7273 277210 8126 279738 8126 c
282184 8126 284183 7291 285730 5627 c
287282 3963 288058 1617 288058 -1399 c
288058 -1587 288052 -1864 288040 -2228 C
274400 -2228 L
274512 -4239 275082 -5779 276105 -6844 c
277128 -7914 278398 -8449 279927 -8449 c
281061 -8449 282031 -8149 282837 -7549 c
283642 -6955 284277 -6003 284748 -4692 C
@c
274570 323 m
284783 323 L
284648 1858 284254 3016 283613 3781 c
282625 4974 281344 5574 279774 5574 c
278351 5574 277151 5098 276181 4145 c
275211 3193 274676 1917 274570 323 C
@c
F
%CHAR: 289522 -10583 (t) @t
/$fm 1 def
298618 -7808 m
299064 -10548 L
298194 -10730 297412 -10824 296724 -10824 c
295596 -10824 294725 -10648 294102 -10289 c
293485 -9936 293050 -9466 292797 -8884 c
292544 -8308 292415 -7085 292415 -5227 c
292415 5298 L
290139 5298 L
290139 7708 L
292415 7708 L
292415 12241 L
295501 14099 L
295501 7708 L
298618 7708 L
298618 5298 L
295501 5298 L
295501 -5397 l
295501 -6285 295554 -6850 295660 -7102 c
295772 -7355 295948 -7555 296195 -7708 c
296442 -7855 296795 -7931 297254 -7931 c
297600 -7931 298053 -7890 298618 -7808 C
@c
F
%CHAR: 407134 0 (S) @t
/$fm 1 def
408721 8114 m
411873 8390 L
412020 7126 412367 6091 412914 5280 c
413460 4468 414307 3816 415453 3316 c
416600 2816 417893 2569 419328 2569 c
420604 2569 421727 2757 422703 3134 c
423679 3516 424408 4033 424884 4692 c
425360 5356 425602 6074 425602 6855 c
425602 7649 425372 8337 424908 8931 c
424449 9525 423691 10019 422638 10418 c
421956 10683 420463 11095 418140 11653 c
415824 12212 414195 12735 413266 13229 c
412061 13858 411161 14646 410568 15581 c
409980 16516 409686 17562 409686 18726 c
409686 19996 410044 21190 410768 22295 c
411491 23406 412549 24247 413937 24823 c
415330 25394 416870 25682 418570 25682 c
420445 25682 422091 25382 423526 24776 c
424955 24177 426054 23289 426824 22119 c
427589 20949 428006 19620 428065 18138 C
424861 17897 L
424684 19491 424102 20702 423109 21513 c
422115 22330 420651 22736 418711 22736 c
416688 22736 415218 22366 414289 21625 c
413366 20884 412902 19990 412902 18950 c
412902 18038 413231 17292 413884 16710 c
414530 16122 416206 15522 418922 14910 c
421639 14293 423503 13758 424514 13299 c
425984 12617 427071 11759 427771 10724 c
428471 9684 428818 8484 428818 7132 c
428818 5785 428435 4521 427665 3334 c
426895 2146 425790 1223 424349 559 c
422909 -100 421286 -429 419487 -429 c
417200 -429 415283 -100 413743 570 c
412196 1235 410985 2234 410103 3575 c
409227 4909 408763 6426 408721 8114 C
@c
F
%CHAR: 430664 -10583 (c) @t
/$fm 1 def
444928 -3880 m
447973 -4280 L
447644 -6379 446791 -8025 445416 -9213 c
444046 -10401 442358 -10995 440359 -10995 c
437861 -10995 435844 -10177 434327 -8543 c
432804 -6908 432040 -4562 432040 -1505 c
432040 470 432369 2199 433022 3681 c
433680 5162 434674 6274 436014 7014 c
437349 7755 438807 8126 440377 8126 c
442364 8126 443993 7620 445251 6615 c
446515 5609 447327 4186 447685 2334 C
444669 1870 L
444381 3099 443875 4022 443146 4645 c
442417 5262 441535 5574 440500 5574 c
438936 5574 437666 5015 436690 3892 c
435714 2775 435226 1005 435226 -1417 c
435226 -3874 435697 -5662 436643 -6779 c
437584 -7890 438813 -8449 440330 -8449 c
441547 -8449 442558 -8072 443375 -7326 c
444193 -6579 444710 -5433 444928 -3880 C
@c
F
%CHAR: 448302 -10583 (o) @t
/$fm 1 def
449472 -1434 m
449472 1952 450413 4463 452300 6091 c
453870 7444 455787 8126 458050 8126 c
460567 8126 462624 7302 464218 5650 c
465817 4004 466611 1729 466611 -1176 c
466611 -3533 466258 -5386 465552 -6732 c
464847 -8084 463818 -9131 462472 -9877 c
461119 -10624 459649 -10995 458050 -10995 c
455493 -10995 453423 -10177 451841 -8531 c
450260 -6891 449472 -4527 449472 -1434 c
@c
452659 -1434 m
452659 -3780 453170 -5533 454193 -6697 c
455216 -7867 456504 -8449 458050 -8449 c
459591 -8449 460872 -7861 461895 -6691 c
462913 -5521 463424 -3733 463424 -1335 c
463424 929 462913 2646 461884 3810 c
460855 4974 459579 5556 458050 5556 c
456504 5556 455216 4974 454193 3816 c
453170 2658 452659 906 452659 -1434 c
@c
F
%CHAR: 467922 -10583 (u) @t
/$fm 1 def
482239 -10583 m
482239 -7896 L
480810 -9966 478876 -10995 476430 -10995 c
475354 -10995 474342 -10789 473408 -10377 c
472473 -9966 471779 -9442 471326 -8819 c
470868 -8190 470550 -7426 470368 -6520 c
470244 -5909 470180 -4945 470180 -3622 c
470180 7708 L
473278 7708 L
473278 -2434 l
473278 -4057 473343 -5144 473466 -5709 c
473666 -6526 474078 -7161 474707 -7631 c
475342 -8096 476124 -8325 477053 -8325 c
477982 -8325 478852 -8090 479669 -7614 c
480486 -7138 481063 -6485 481398 -5668 c
481739 -4845 481909 -3651 481909 -2093 c
481909 7708 L
485008 7708 L
485008 -10583 L
482239 -10583 L
@c
F
%CHAR: 487542 -10583 (n) @t
/$fm 1 def
489870 -10583 m
489870 7708 L
492657 7708 L
492657 5109 L
494004 7120 495944 8126 498478 8126 c
499583 8126 500594 7926 501518 7532 c
502447 7132 503134 6615 503593 5968 c
504058 5327 504375 4563 504563 3681 c
504675 3104 504734 2099 504734 664 c
504734 -10583 L
501629 -10583 L
501629 547 l
501629 1805 501512 2752 501271 3381 c
501030 4004 500600 4504 499989 4874 c
499372 5250 498654 5439 497825 5439 c
496502 5439 495368 5015 494403 4180 c
493445 3340 492969 1752 492969 -594 c
492969 -10583 L
489870 -10583 L
@c
F
%CHAR: 507162 -10583 (t) @t
/$fm 1 def
516258 -7808 m
516704 -10548 L
515834 -10730 515052 -10824 514364 -10824 c
513236 -10824 512365 -10648 511742 -10289 c
511125 -9936 510690 -9466 510437 -8884 c
510184 -8308 510055 -7085 510055 -5227 c
510055 5298 L
507779 5298 L
507779 7708 L
510055 7708 L
510055 12241 L
513141 14099 L
513141 7708 L
516258 7708 L
516258 5298 L
513141 5298 L
513141 -5397 l
513141 -6285 513194 -6850 513300 -7102 c
513412 -7355 513588 -7555 513835 -7708 c
514082 -7855 514435 -7931 514894 -7931 c
515240 -7931 515693 -7890 516258 -7808 C
@c
F
T
@rax 130.48101 155.03159 139.86000 161.04132 @E
[0.00026575 0.00000000 0.00000000 0.00028346 130.48100310 156.85454544] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_ArialMT 20633.00000 z
%CHAR: 0 0 (X) @t
/$fm 1 def
89 0 m
5805 7696 L
767 14770 L
3092 14770 L
5774 10980 l
6331 10196 6726 9591 6960 9168 C
7290 9704 7679 10265 8129 10850 c
11104 14770 L
13229 14770 L
8040 7810 L
13632 0 L
11214 0 L
7497 5268 l
7287 5571 7074 5901 6850 6255 C
6520 5719 6286 5351 6145 5148 c
2438 0 L
89 0 L
@c
F
%CHAR: 13762 -6190 (o) @t
/$fm 1 def
14446 -839 m
14446 1142 14997 2610 16100 3563 c
17019 4353 18140 4752 19464 4752 c
20935 4752 22139 4271 23071 3305 c
24006 2342 24471 1011 24471 -688 c
24471 -2067 24264 -3150 23852 -3938 c
23439 -4728 22837 -5341 22050 -5777 c
21259 -6214 20399 -6431 19464 -6431 c
17968 -6431 16757 -5953 15832 -4990 c
14907 -4030 14446 -2648 14446 -839 c
@c
16310 -839 m
16310 -2211 16609 -3236 17208 -3917 c
17806 -4601 18559 -4942 19464 -4942 c
20365 -4942 21114 -4598 21713 -3913 c
22308 -3229 22607 -2184 22607 -781 c
22607 543 22308 1547 21706 2228 c
21104 2909 20358 3250 19464 3250 c
18559 3250 17806 2909 17208 2232 c
16609 1554 16310 529 16310 -839 c
@c
F
%CHAR: 25237 -6190 (n) @t
/$fm 1 def
26599 -6190 m
26599 4508 L
28229 4508 L
28229 2988 L
29016 4164 30151 4752 31633 4752 c
32280 4752 32871 4635 33411 4405 c
33954 4171 34357 3869 34625 3490 c
34897 3115 35082 2668 35192 2153 c
35258 1816 35292 1228 35292 388 c
35292 -6190 L
33476 -6190 L
33476 320 l
33476 1056 33408 1609 33267 1977 c
33126 2342 32875 2634 32517 2851 c
32156 3071 31736 3181 31252 3181 c
30478 3181 29814 2933 29250 2445 c
28690 1953 28411 1025 28411 -347 c
28411 -6190 L
26599 -6190 L
@c
F
T
@rax 159.99591 98.52265 178.16287 104.53266 @E
[0.00028346 0.00000000 0.00000000 0.00028346 159.99589966 100.34560263] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_ArialMT 20634.00000 z
%CHAR: 0 0 (X) @t
/$fm 1 def
89 0 m
5805 7696 L
767 14771 L
3092 14771 L
5774 10981 l
6331 10197 6727 9591 6961 9168 C
7291 9705 7679 10265 8130 10850 c
11105 14771 L
13230 14771 L
8040 7810 L
13632 0 L
11215 0 L
7497 5269 l
7287 5571 7074 5901 6850 6256 C
6520 5719 6286 5351 6145 5148 c
2438 0 L
89 0 L
@c
F
%CHAR: 13763 -6190 (c) @t
/$fm 1 def
22106 -2270 m
23887 -2503 L
23695 -3731 23196 -4694 22391 -5389 c
21590 -6083 20603 -6431 19434 -6431 c
17972 -6431 16793 -5953 15905 -4997 c
15015 -4041 14568 -2668 14568 -880 c
14568 275 14760 1286 15142 2153 c
15527 3020 16108 3670 16892 4103 c
17673 4536 18526 4753 19444 4753 c
20607 4753 21559 4457 22295 3869 c
23035 3281 23509 2449 23719 1365 C
21955 1094 L
21786 1813 21490 2352 21064 2717 c
20638 3078 20122 3260 19516 3260 c
18602 3260 17859 2934 17288 2277 c
16717 1623 16432 588 16432 -829 c
16432 -2266 16707 -3312 17260 -3965 c
17811 -4615 18529 -4942 19417 -4942 c
20129 -4942 20720 -4722 21198 -4285 c
21676 -3848 21979 -3177 22106 -2270 C
@c
F
%CHAR: 24080 -6190 (o) @t
/$fm 1 def
24764 -839 m
24764 1142 25315 2610 26419 3563 c
27337 4354 28458 4753 29782 4753 c
31254 4753 32457 4271 33389 3305 c
34325 2342 34789 1011 34789 -688 c
34789 -2067 34583 -3150 34170 -3937 c
33757 -4728 33156 -5341 32368 -5777 c
31577 -6214 30717 -6431 29782 -6431 c
28286 -6431 27075 -5953 26150 -4990 c
25225 -4030 24764 -2648 24764 -839 c
@c
26628 -839 m
26628 -2211 26927 -3236 27526 -3917 c
28124 -4601 28877 -4942 29782 -4942 c
30683 -4942 31433 -4598 32031 -3913 c
32626 -3229 32925 -2184 32925 -780 c
32925 544 32626 1548 32024 2229 c
31422 2910 30676 3250 29782 3250 c
28877 3250 28124 2910 27526 2232 c
26927 1555 26628 530 26628 -839 c
@c
F
%CHAR: 35556 -6190 (u) @t
/$fm 1 def
43930 -6190 m
43930 -4618 L
43094 -5829 41963 -6431 40532 -6431 c
39903 -6431 39311 -6310 38765 -6070 c
38218 -5829 37812 -5523 37547 -5158 c
37279 -4790 37093 -4343 36987 -3814 c
36914 -3456 36877 -2892 36877 -2118 c
36877 4509 L
38689 4509 L
38689 -1424 l
38689 -2373 38727 -3009 38799 -3339 c
38916 -3817 39157 -4189 39525 -4464 c
39896 -4735 40353 -4869 40897 -4869 c
41440 -4869 41949 -4732 42427 -4453 c
42905 -4175 43242 -3793 43438 -3315 c
43638 -2834 43737 -2135 43737 -1224 c
43737 4509 L
45550 4509 L
45550 -6190 L
43930 -6190 L
@c
F
%CHAR: 47032 -6190 (n) @t
/$fm 1 def
48394 -6190 m
48394 4509 L
50024 4509 L
50024 2989 L
50811 4165 51946 4753 53429 4753 c
54075 4753 54667 4636 55207 4406 c
55750 4172 56152 3869 56420 3491 c
56692 3116 56878 2669 56988 2153 c
57053 1816 57088 1228 57088 389 c
57088 -6190 L
55272 -6190 L
55272 320 l
55272 1056 55203 1610 55062 1978 c
54921 2342 54670 2634 54312 2851 c
53951 3071 53532 3181 53047 3181 c
52273 3181 51609 2934 51045 2445 c
50485 1954 50206 1025 50206 -347 c
50206 -6190 L
48394 -6190 L
@c
F
%CHAR: 58508 -6190 (t) @t
/$fm 1 def
63828 -4567 m
64089 -6169 L
63581 -6276 63123 -6331 62721 -6331 c
62060 -6331 61552 -6228 61187 -6018 c
60826 -5812 60571 -5537 60424 -5196 c
60276 -4859 60200 -4144 60200 -3057 c
60200 3099 L
58869 3099 L
58869 4509 L
60200 4509 L
60200 7160 L
62005 8247 L
62005 4509 L
63828 4509 L
63828 3099 L
62005 3099 L
62005 -3157 l
62005 -3676 62036 -4006 62098 -4154 c
62164 -4302 62267 -4419 62411 -4508 c
62556 -4594 62762 -4639 63030 -4639 c
63233 -4639 63498 -4615 63828 -4567 C
@c
F
T
%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel12Dict 12.0 0
%%EOF
